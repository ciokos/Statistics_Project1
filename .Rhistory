#Exercise 2.1
dbinom(4,10,0.6)
pbinom(4,10,0.6)
pbinom(5,10,0.6)
#P(X<=5)
pbinom(5,10,0.6)
#P(X<5) = P(<=4)
pbinom(4,10,0.6)
#P(X=5)
dbinom(5,10,0.6)
#P(X<5) = P(<=4)
pbinom(4,10,0.6)
#P(X>4)
1-pbinom(4,10,0.6)
#P(X=5)
dbinom(5,10,0.6)
dpois(4,3)
#Exercise 2.4
dhyper(x = 0, k = 3, m = 6, n = 14, log = FALSE)
#Exercise 2.5
1-dhyper(x = 0,m = 2, n = 18, k = 3, log = FALSE)
pbinom(size = 10, prob = 0.99, log.p = FALSE, q = 0)
pbinom(size = 10, prob = 0.01, log.p = FALSE, q = 0)
pbinom(size = 10, prob = 0.1, log.p = FALSE, q = 0)
ppois(q = 5, lambda = 1.6, lower.tail = FALSE, log.p = FALSE)
ppois(q = 8, lambda = 1.6*5)
ppois(q = 19, lambda = 180/12, lower.tail = FALSE)
ppois(lambda = 180/12, q = 20:25)
#Exercise 2.9
curve(dnorm, xlim=c(-4,4))
abline(v=qnorm(0.975))
#Exercise 2.10
pnorm(q = 20, mean = 24, sd = 4)
pnorm(q = 29.5, mean = 24, sd = 4, lower.tail = FALSE)
#Exercise 2.11
pnorm(q = 10, mean = 11, sd = 5)
#Exercise 2.12
pnorm(q = 3007, mean = 3000, sd = 3, lower.tail = FALSE) + pnorm(q = 2993, mean = 3000, sd = 3)
#Exercise 2.13
ppois(q = 0, lambda = 110000/365/48)
dpois(x = 0, lambda = 110000/365/48/2)
#Exercise 2.14
plnorm(q = 30, meanlog = 3.1, sdlog = 0.15, lower.tail = FALSE)
hist(D$bmi, main = "Density Histogram of BMI", xlim = c(15,40),xlab="BMI", prob=TRUE,
las=1,
col = "green")
hist(D$bmi, main = "Density Histogram of BMI", xlim = c(15,40),xlab="BMI", prob=TRUE,
las=1,
col = "green")
## In RStudio the working directory is easily set via the menu
## "Session -> Set Working Directory -> To Source File Location"
## Note: In R only "/" is used for separating in paths
## (i.e. no backslash).
setwd("/Users/wojciechciok/Documents/DTU/Statistics/project1/Statistics_Project1")
## Read data from bmi1_data.csv
D <- read.table("bmi1_data.csv", header=TRUE, sep=";", as.is=TRUE)
## Dimensions of D (number of rows and columns)
dim(D)
##  Column/variable names
names(D)
## The first rows/observations
head(D)
## The last rows/observations
tail(D)
## Selected summary statistics
summary(D)
## Another type of summary of the dataset
str(D)
## Check for missing values
sum(is.na.data.frame(D))
## Calculate BMI scores and add new variable to D
D$bmi <- D$weight/(D$height/100)^2
hist(D$bmi, main = "Density Histogram of BMI", xlim = c(15,40),xlab="BMI", prob=TRUE,
las=1,
col = "green")
abline(v=median(D$bmi),col="red")
abline(v=mean(D$bmi),col="blue")
## Divide data into two subsets according to gender
Dfemale <- subset(D, gender == 0)
Dmale <- subset(D, gender == 1)
## Density histograms describing the empirical density
## of the BMI scores of women and men, respectively.
hist(Dfemale$bmi, xlab="BMI (female)", prob=TRUE)
hist(Dmale$bmi, xlab="BMI (male)", prob=TRUE)
## Density histograms describing the empirical density
## of the BMI scores of women and men, respectively.
hist(Dfemale$bmi, xlab="BMI (female)", prob=TRUE)
hist(Dmale$bmi, xlab="BMI (male)", prob=TRUE)
hist(Dfemale$bmi, main = "Density Histogram of BMI for Females", xlim = c(15,40),xlab="BMI", prob=TRUE,
las=1,
col = "green")
abline(v=median(Dfemale$bmi),col="red")
abline(v=mean(Dfemale$bmi),col="blue")
hist(Dmale$bmi, main = "Density Histogram of BMI for Males", xlim = c(15,40),xlab="BMI", prob=TRUE,
las=1,
col = "green")
abline(v=median(Dmale$bmi),col="red")
abline(v=mean(Dmale$bmi),col="blue")
## Box plot of BMI scores by gender
boxplot(Dfemale$bmi, Dmale$bmi, names=c("Female", "Male"),
xlab="Gender", ylab="BMI")
## Total number of observations
## (doesn't include missing values if there are any)
sum(!is.na(D$bmi))
## Sample mean (both genders combined)
mean(D$bmi, na.rm=TRUE)
## Sample variance (both genders combined)
var(D$bmi, na.rm=TRUE)
## New variable 'logbmi' with log-transformed BMI
D$logbmi <- log(D$bmi)
summary(D$bmi)
install.packages("xtable")
aggregate(D$bmi, by=list(D$gender), function(x){
c(mean=mean(x), var=var(x)) })
aggregate(D$bmi, by=list(D$gender), function(x){
c(sum = sum(!is.na(x)), mean=mean(x), var=var(x), sd = sd(x), median(x))
})
aggregate(D$bmi, by=c(list(D$gender), ), function(x){
c(sum = sum(!is.na(x)), mean=mean(x), var=var(x), sd = sd(x), median(x))
})
aggregate(D$bmi, by=c(list(D$gender), D$bmi), function(x){
c(sum = sum(!is.na(x)), mean=mean(x), var=var(x), sd = sd(x), median(x))
})
aggregate(D$bmi, function(x){
c(sum = sum(!is.na(x)), mean=mean(x), var=var(x), sd = sd(x), median(x))
})
aggregate(D$bmi, by=c(list(D$gender), D), function(x){
c(sum = sum(!is.na(x)), mean=mean(x), var=var(x), sd = sd(x), median(x))
})
aggregate(D$bmi, by=list(D$gender), function(x){
c(sum = sum(!is.na(x)), mean=mean(x), var=var(x), sd = sd(x), median(x))
})
c(sum = sum(!is.na(x)), mean=mean(x), var=var(x), sd = sd(x), median = median(x))
aggregate(D$bmi, by=list(D$gender), function(x){
c(sum = sum(!is.na(x)), mean=mean(x), var=var(x), sd = sd(x), median = median(x))
})
aggregate(D$bmi, by=list(D$gender, 1), function(x){
c(sum = sum(!is.na(x)), mean=mean(x), var=var(x), sd = sd(x), median = median(x))
})
Tbl <- data.frame()
for(i in 0:1){
Tbl[i+1, "mean"] <- mean(D$bmi[D$gender == i])
Tbl[i+1, "var"] <- var(D$bmi[D$gender == i]) }
row.names(Tbl) <- c("Women","Men") ## View the contents of Tbl
Tbl
Tbl <- data.frame()
for(i in 0:1){
Tbl[i+1, "Number of obs."] <- sum(D$bmi[D$gender == i])
Tbl[i+1, "Sample mean"] <- mean(D$bmi[D$gender == i])
Tbl[i+1, "Sample Variance"] <- var(D$bmi[D$gender == i])
Tbl[i+1, "Sample st. dev."] <- sd(D$bmi[D$gender == i])
Tbl[i+1, "Lower quartile"] <- var(D$bmi[D$gender == i])
Tbl[i+1, "Median"] <- median(D$bmi[D$gender == i])
Tbl[i+1, "Upper quartile"] <- var(D$bmi[D$gender == i])
}
row.names(Tbl) <- c("Women","Men")
Tbl
Tbl <- data.frame()
Tbl[1, "Number of obs."] <- sum(D$bmi)
Tbl[1, "Sample mean"] <- mean(D$bmi)
Tbl[1, "Sample Variance"] <- var(D$bmi)
Tbl[1, "Sample st. dev."] <- sd(D$bmi)
Tbl[1, "Lower quartile"] <- var(D$bmi)
Tbl[1, "Median"] <- median(D$bmi)
Tbl[1, "Upper quartile"] <- var(D$bmi)
for(i in 0:1){
Tbl[i+2, "Number of obs."] <- sum(D$bmi[D$gender == i])
Tbl[i+2, "Sample mean"] <- mean(D$bmi[D$gender == i])
Tbl[i+2, "Sample Variance"] <- var(D$bmi[D$gender == i])
Tbl[i+2, "Sample st. dev."] <- sd(D$bmi[D$gender == i])
Tbl[i+2, "Lower quartile"] <- var(D$bmi[D$gender == i])
Tbl[i+2, "Median"] <- median(D$bmi[D$gender == i])
Tbl[i+2, "Upper quartile"] <- var(D$bmi[D$gender == i])
}
row.names(Tbl) <- c("Everyone", "Women","Men")
Tbl
## Total number of observations
## (doesn't include missing values if there are any)
sum(!is.na(D$bmi))
Tbl <- data.frame()
Tbl[1, "Number of obs."] <- sum(!is.na(D$bmi))
Tbl[1, "Sample mean"] <- mean(D$bmi)
Tbl[1, "Sample Variance"] <- var(D$bmi)
Tbl[1, "Sample st. dev."] <- sd(D$bmi)
Tbl[1, "Lower quartile"] <- var(D$bmi)
Tbl[1, "Median"] <- median(D$bmi)
Tbl[1, "Upper quartile"] <- var(D$bmi)
for(i in 0:1){
Tbl[i+2, "Number of obs."] <- sum(D$bmi[D$gender == i])
Tbl[i+2, "Sample mean"] <- mean(D$bmi[D$gender == i])
Tbl[i+2, "Sample Variance"] <- var(D$bmi[D$gender == i])
Tbl[i+2, "Sample st. dev."] <- sd(D$bmi[D$gender == i])
Tbl[i+2, "Lower quartile"] <- var(D$bmi[D$gender == i])
Tbl[i+2, "Median"] <- median(D$bmi[D$gender == i])
Tbl[i+2, "Upper quartile"] <- var(D$bmi[D$gender == i])
}
row.names(Tbl) <- c("Everyone", "Women","Men")
Tbl
Tbl <- data.frame()
Tbl[1, "Number of obs."] <- sum(!is.na(D$bmi))
Tbl[1, "Sample mean"] <- mean(D$bmi)
Tbl[1, "Sample Variance"] <- var(D$bmi)
Tbl[1, "Sample st. dev."] <- sd(D$bmi)
Tbl[1, "Lower quartile"] <- var(D$bmi)
Tbl[1, "Median"] <- median(D$bmi)
Tbl[1, "Upper quartile"] <- var(D$bmi)
for(i in 0:1){
Tbl[i+2, "Number of obs."] <- sum(!is.na(D$bmi[D$gender == i]))
Tbl[i+2, "Sample mean"] <- mean(!is.na(D$bmi[D$gender == i]))
Tbl[i+2, "Sample Variance"] <- var(!is.na(D$bmi[D$gender == i]))
Tbl[i+2, "Sample st. dev."] <- sd(!is.na(D$bmi[D$gender == i]))
Tbl[i+2, "Lower quartile"] <- var(!is.na(D$bmi[D$gender == i]))
Tbl[i+2, "Median"] <- median!is.na((D$bmi[D$gender == i]))
Tbl[i+2, "Upper quartile"] <- var(!is.na(D$bmi[D$gender == i]))
}
row.names(Tbl) <- c("Everyone", "Women","Men")
Tbl
for(i in 0:1){
Tbl[i+2, "Number of obs."] <- sum(!is.na(D$bmi[D$gender == i]))
Tbl[i+2, "Sample mean"] <- mean(D$bmi[D$gender == i])
Tbl[i+2, "Sample Variance"] <- var(D$bmi[D$gender == i])
Tbl[i+2, "Sample st. dev."] <- sd(D$bmi[D$gender == i])
Tbl[i+2, "Lower quartile"] <- var(D$bmi[D$gender == i])
Tbl[i+2, "Median"] <- median(D$bmi[D$gender == i])
Tbl[i+2, "Upper quartile"] <- var(D$bmi[D$gender == i])
}
row.names(Tbl) <- c("Everyone", "Women","Men")
Tbl
## New variable 'logbmi' with log-transformed BMI
D$logbmi <- log(D$bmi)
## etc.
##
## The argument 'na.rm=TRUE' ensures that the statistic is
## computed even in cases where there are missing values.
Tbl <- data.frame()
Tbl[1, "Number of obs."] <- sum(!is.na(D$bmi))
Tbl[1, "Sample mean"] <- mean(D$bmi)
Tbl[1, "Sample Variance"] <- var(D$bmi)
Tbl[1, "Sample st. dev."] <- sd(D$bmi)
Tbl[1, "Lower quartile"] <- quantile(D$bmi, 0.25)
Tbl[1, "Median"] <- median(D$bmi)
Tbl[1, "Upper quartile"] <- quantile(D$bmi, 0.75)
for(i in 0:1){
Tbl[i+2, "Number of obs."] <- sum(!is.na(D$bmi[D$gender == i]))
Tbl[i+2, "Sample mean"] <- mean(D$bmi[D$gender == i])
Tbl[i+2, "Sample Variance"] <- var(D$bmi[D$gender == i])
Tbl[i+2, "Sample st. dev."] <- sd(D$bmi[D$gender == i])
Tbl[i+2, "Lower quartile"] <- quantile(D$bmi[D$gender == i], 0.25)
Tbl[i+2, "Median"] <- median(D$bmi[D$gender == i])
Tbl[i+2, "Upper quartile"] <- quantile(D$bmi[D$gender == i], 0.75)
}
row.names(Tbl) <- c("Everyone", "Women","Men")
Tbl
tab <- as.table(Tbl)
xtable(Tbl)
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
xtable(Tbl)
xtable(Tbl, label = "Summary Statistics of BMI with Gender Distinction")
xtable(Tbl, label = "Summary Statistics of BMI with Gender Distinction", auto = TRUE)
xtable(Tbl, label = "Summary Statistics of BMI with Gender Distinction", align = "p{3cm}")
xtable(Tbl, label = "Summary Statistics of BMI with Gender Distinction", align = "p{3cm}p{3cm}p{3cm}p{3cm}p{3cm}p{3cm}p{3cm}p{3cm}")
